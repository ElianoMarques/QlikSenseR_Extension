define(["jquery","./jquery-1.10.2.min.js","opencpu-0.4.js","text!./R.css"], function($, cssContent) {'use strict';
	$("<style>").html(cssContent).appendTo("head");
	return {
		initialProperties : {
			version: 1.0,
			qHyperCubeDef : {
				qDimensions : [],
				qMeasures : [],
				qInitialDataFetch : [{
					qWidth : 10,
					qHeight : 50
				}]
			}
		},
		definition : {
			type : "items",
			component : "accordion",
			items : {
				dimensions : {
					uses : "dimensions",
					min : 1
				},
				measures : {
					uses : "measures",
					min : 0
				},
				sorting : {
					uses : "sorting"
				},
				settings : {
					uses : "settings",
					items : {
						initFetchRows : {
							ref : "qHyperCubeDef.qInitialDataFetch.0.qHeight",
							label : "Initial fetch rows",
							type : "number",
							defaultValue : 50
						},
					}
				}
			}
		},
		snapshot : {
			canTakeSnapshot : true
		},
		paint : function($element) {
			 var _this = this;
			 function initGrid() {

                var tableDiv = document.createElement("div");
                tableDiv.style.overflow = "auto";
                tableDiv.style.height = _this.GetHeight() - 35 + "px";
                tableDiv.className = "divTable";

                var myTable = document.createElement("table");
				//Use ID from Object
                myTable.className = "tblDataSelection";
                myTable.id = "tblDataSelection_1111";

                tableDiv.appendChild(myTable);
                _this.Element.appendChild(tableDiv);
            }

            function initFooter() {
                var divStatusBar = document.createElement("div");
                divStatusBar.className = "statusBar";
                divStatusBar.id = "statusBar_1111" ;

                // Submit-Button
                var divSubmit = document.createElement("div");
                divSubmit.className = "divSubmit";
                var submitButton = document.createElement("input");
                submitButton.type = "button";
                submitButton.value = _this.Label_Submit;
                submitButton.addEventListener("click", submitButton_Click, false);
                divSubmit.appendChild(submitButton);
                divStatusBar.appendChild(divSubmit);
                _this.Element.appendChild(divStatusBar);

            }
			
			var html = "<table><thead><tr>", self = this, lastrow = 0, morebutton = false;
			//render titles
			$.each(this.backendApi.getDimensionInfos(), function(key, value) {
				html += '<th>' + value.qFallbackTitle + '</th>';
			});
			$.each(this.backendApi.getMeasureInfos(), function(key, value) {
				html += '<th>' + value.qFallbackTitle + '</th>';
			});
			html += "</tr></thead><tbody>";
			//render data
			this.backendApi.eachDataRow(function(rownum, row) {
				lastrow = rownum;
				html += '<tr>';
				$.each(row, function(key, cell) {
					if(cell.qIsOtherCell) {
						cell.qText = self.backendApi.getDimensionInfos()[key].othersLabel;
					}
					html += '<td';
					if(!isNaN(cell.qNum)) {
						html += " class='numeric'";
					}
					html += '>' + cell.qText + '</td>';
				});
				html += '</tr>';
			});
			html += "</tbody></table>";
			//add 'more...' button
			if(this.backendApi.getRowCount() > lastrow + 1) {
				html += "<button id='more'>More...</button>";
				morebutton = true;
			}
			//$myTable.append(html);
			$element.html(html);
			//$element.html(p);
			if(morebutton) {
				var requestPage = [{
					qTop : lastrow + 1,
					qLeft : 0,
					qWidth : 10, //should be # of columns
					qHeight : Math.min(50, this.backendApi.getRowCount() - lastrow)
				}];
				$element.find("#more").on("qv-activate", function() {
					self.backendApi.getData(requestPage).then(function(dataPages) {
						self.paint($element);
					});
				});
			}
		}
	};
});
